/**
 * @file pages/ProjectAdminPage.jsx
 * @description –°—Ç—Ä–∞–Ω–∏—Ü–∞ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏—è –æ–¥–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞ –∏ –µ–≥–æ —à–∞–≥–æ–≤.
 */
import React, { useEffect, useState } from "react";
import { useParams, Link } from "react-router-dom";
import { observer } from "mobx-react-lite";
import { useStore } from "../hooks/useStore";
import StepFormModal from "../components/modals/StepFormModal";
import ConfirmDeleteModal from "../components/modals/ConfirmDeleteModal";
// –ú–æ–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å —Å—Ç–∏–ª–∏ –¥–ª—è —ç—Ç–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã, –Ω–∞–ø—Ä–∏–º–µ—Ä, ProjectAdminPage.css

const ProjectAdminPage = observer(() => {
  const { projectStore } = useStore();
  const { id: projectId } = useParams();

  const [stepToDelete, setStepToDelete] = useState(null);

  useEffect(() => {
    if (projectId) {
      projectStore.fetchProject(projectId);
    }
  }, [projectId, projectStore]);

  const handleConfirmDelete = async () => {
    if (stepToDelete) {
      await projectStore.deleteStep(stepToDelete.id);
      setStepToDelete(null);
    }
  };

  if (projectStore.isLoading || !projectStore.currentProject) {
    return <div>–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–∞...</div>;
  }

  const project = projectStore.currentProject;

  return (
    <div
      className="admin-page-container"
      style={{ maxWidth: "1000px", margin: "0 auto" }}
    >
      <div className="admin-header" style={{ marginBottom: "2rem" }}>
        <Link to={`/courses/${project.course?.slug}`}>
          &larr; –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –∫—É—Ä—Å—É
        </Link>
        <h1>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–æ–º: {project.title}</h1>
      </div>

      <div className="steps-section">
        <div
          style={{
            display: "flex",
            justifyContent: "space-between",
            alignItems: "center",
            marginBottom: "1rem",
          }}
        >
          <h2>–®–∞–≥–∏ –ø—Ä–æ–µ–∫—Ç–∞</h2>
          <button
            onClick={() => projectStore.openStepCreateModal()}
            className="btn-primary"
          >
            + –î–æ–±–∞–≤–∏—Ç—å —à–∞–≥
          </button>
        </div>

        {/* –°–ø–∏—Å–æ–∫ —à–∞–≥–æ–≤ */}
        <div className="steps-list">
          {project.steps
            .slice()
            .sort((a, b) => a.order - b.order)
            .map((step) => (
              <div
                key={step.id}
                className="step-item"
                style={{
                  display: "flex",
                  justifyContent: "space-between",
                  border: "1px solid #eee",
                  padding: "1rem",
                  marginBottom: "0.5rem",
                  borderRadius: "6px",
                }}
              >
                <div>
                  <strong>–®–∞–≥ {step.order}:</strong>{" "}
                  {step.instructions.substring(0, 100)}...
                </div>
                <div>
                  <button
                    onClick={() => projectStore.openStepEditModal(step)}
                    style={{ marginRight: "0.5rem" }}
                  >
                    ‚úèÔ∏è
                  </button>
                  <button onClick={() => setStepToDelete(step)}>üóëÔ∏è</button>
                </div>
              </div>
            ))}
        </div>
      </div>

      {/* –ú–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞ */}
      <StepFormModal />
      <ConfirmDeleteModal
        isOpen={!!stepToDelete}
        onClose={() => setStepToDelete(null)}
        onConfirm={handleConfirmDelete}
        title={`–£–¥–∞–ª–∏—Ç—å –®–∞–≥ ${stepToDelete?.order}?`}
        isLoading={projectStore.isLoadingStepAction}
      />
    </div>
  );
});

export default ProjectAdminPage;
